generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Merchant {
  id                  String      @id @unique @default(uuid())
  name                String
  email               String      @unique
  username            String      @unique
  password            String
  pin                 Int 
  type                Shop_type
  walletAddress       String      @unique
  Privatekey       String      @unique
  businessName        String
    iv                  String
  shopAddress         String
  phoneNumber         String
  gstin               String?
  isActive            Boolean     @default(true)
  isVerified          Boolean     @default(false)
  products            Product[]
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
}

model Customer {
  id            String    @id @unique @default(uuid())
  name                String
  email               String      @unique
  username            String      @unique
  password            String
     iv                  String
   Privatekey       String      @unique
    pin                 Int 
  deviceId      String    @unique 
  walletAddress String    @unique 
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}



model Product {
  id          String    @id @default(uuid())
  merchantId  String
  merchant    Merchant  @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  name        String
  description String?
  price       Float
  category    String
  subcategory String?
  stock       Int       @default(0)
  isAvailable Boolean   @default(true)
  isVeg       Boolean?
  brand       String?
  unit        String?
  billItems   BillItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}



model BillItem {
  id        String  @id @default(uuid())
  billId    String

  productId String
  product   Product @relation(fields: [productId], references: [id])
  
  quantity  Int
  price     Float
  notes     String?
  
  createdAt DateTime @default(now())
}



enum Shop_type {
  Restaurant
  General_Store
}

enum BillStatus {
  PENDING
  PAID
  CANCELLED
  EXPIRED
}

enum PaymentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

enum TipStatus {
  PENDING
  PAID
  FAILED
} 